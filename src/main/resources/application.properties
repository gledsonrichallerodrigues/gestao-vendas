spring.application.name=gestao-vendas

############## APPLICATION PORT ##############
server.port=8080

############## MYSQL CONFIGURATION ##############
spring.jpa.database=MYSQL
spring.datasource.url=jdbc:mysql://localhost/gvendas_db?useTimezone=true&serverTimezone=America/Sao_Paulo
spring.datasource.username=gvendas
spring.datasource.password=gvendas
spring.jpa.show-sql=true
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

############## Configuracao do Jaeger com OpenTelemetry ##############
# Definir o nome do servico (ele aparecera no Jaeger UI)
otel.service.name=gestao-vendas

# Configuracao do Jaeger exporter via gRPC (OTLP)
otel.traces.exporter=jaeger
otel.exporter.jaeger.endpoint=http://jaeger:4317

# Configuracao de amostragem (100% de amostragem)
otel.sampler.probability=1

# Habilitar log de depuracao para exportacao ao Jaeger
otel.exporter.jaeger.debug=true

# Nivel de log do OpenTelemetry
otel.logs.level=debug

#otel.exporter.otlp.protocol=grpc

# Configuracao para exportacao de metricas para OTLP
otel.metrics.exporter=none
otel.metrics.enabled=false

otel.exporter.otlp.metrics.enabled=false
#otel.exporter.otlp.endpoint=http://localhost:4318